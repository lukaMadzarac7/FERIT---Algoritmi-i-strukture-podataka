#include <stdio.h>
#include <stdlib.h>


void gen_arr(float V[], int n, float dg, float gg);
int sekv_pret(float V[], int n, float x);
void sort(float V[], int n);
int bin_pret(float V[], int n, float x);

int main()
{
    int n = 0;
    float dg = 0;
    float gg = 0;
    int i = 0;
    float x = 0;
    printf("Unesi duljinu polja: ");
    scanf("%d", &n);
    printf("Unesi donju granicu: ");
    scanf("%f", &dg);
    printf("Unesi gornju granicu: ");
    scanf("%f", &gg);
    printf("Unesi broj koji se traži: ");
    scanf("%f", &x);
    float V[n];
    gen_arr(V, n, dg, gg);
    sort(V, n);
    printf("Binarno pretraživanje: %d \n", bin_pret(V, n-1, x));
    printf("Sekvencijalno pretraživanje: %d \n", sekv_pret(V, n, x));
    

    return 0;
}

void gen_arr(float V[], int n, float dg, float gg){
    time_t t;
    int i = 0;
    srand((unsigned) time(&t));
    for( i = 0 ; i < n ; i++ ) {
      V[i] = rand() % ((int)gg + 1 - (int)dg) + (int)dg;
   }
   printf("Ne sortirano polje: ");
   printf("\n");
    for( i = 0 ; i < n ; i++ ) {
      printf("%f   ", V[i]);
      //printf("\n");
   }
   printf("\n");

  
}

int sekv_pret(float V[], int n, float search){
    int i;
    for (i = 0; i < n; i++) {
        if (V[i] == search)    
    {
      return i;
      break;
    }
  }
  if (i == n)
    return -1;
}

void sort(float V[], int n){
int i, element, j; 
for (i = 1; i < n; i++) { 
    element = V[i]; j = i - 1; 
    while (j >= 0 && V[j] > element) { 
        V[j + 1] = V[j]; 
        j = j - 1; 
    } 
    V[j + 1] = element; 
    }
    
    printf("Sortirano polje: ");
    printf("\n");
    i = 0; 
    for (i = 0; i < n; i++) {
        printf("%f ", V[i]); 
    }
    printf("\n");
    

}

int bin_pret(float V[], int high, float x){
    int low = 0;
  while (low <= high) {
    int mid = low + (high - low) / 2;

    if (V[mid] == x)
      return mid;

    if (V[mid] < x)
      low = mid + 1;

    else
      high = mid - 1;
  }

  return -1;
}